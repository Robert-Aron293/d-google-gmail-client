/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */
module Google.Apis.Gmail.v1.Data.ListDraftsResponse;

import vibe.data.json: optional;
import std.typecons: Nullable;
import std.datetime : SysTime;
import std.conv: to;

import Google.Apis.Gmail.v1.GmailMyNullable;

import Google.Apis.Gmail.v1.Data.Draft;

/**
 * Model definition for ListDraftsResponse.
 *
 * This is the D data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Gmail API. For a detailed explanation see:
 *
 *
 * @author Robert Aron.
 */
public struct ListDraftsResponse {

  /**
   * List of drafts. Note that the `Message` property in each `Draft` resource only contains an `id`
   * and a `threadId`. The messages.get method can fetch additional message details.
   * The value may be {@code null}.
   */
  @optional public Draft[] _drafts;

  /**
   * Token to retrieve the next page of results in the list.
   * The value may be {@code null}.
   */
  @optional public string _nextPageToken;

  /**
   * Estimated total number of results.
   * The value may be {@code null}.
   */
  @optional public Nullable!long _resultSizeEstimate;

  /**
   * List of drafts. Note that the `Message` property in each `Draft` resource only contains an `id`
   * and a `threadId`. The messages.get method can fetch additional message details.
   * @return value or {@code null} for none
   */
  public Draft[] getDrafts() {
    return _drafts;
  }
  /**
   * List of drafts. Note that the `Message` property in each `Draft` resource only contains an `id`
   * and a `threadId`. The messages.get method can fetch additional message details.
   * @param drafts drafts or {@code null} for none
   */
  public ListDraftsResponse setDrafts(Draft[] _drafts) {
    this._drafts = _drafts;
    return this;
  }

  /**
   * Token to retrieve the next page of results in the list.
   * @return value or {@code null} for none
   */
  public string getNextPageToken() {
    return _nextPageToken;
  }
  /**
   * Token to retrieve the next page of results in the list.
   * @param nextPageToken nextPageToken or {@code null} for none
   */
  public ListDraftsResponse setNextPageToken(string _nextPageToken) {
    this._nextPageToken = _nextPageToken;
    return this;
  }

  /**
   * Estimated total number of results.
   * @return value or {@code null} for none
   */
  public Nullable!long getResultSizeEstimate() {
    return _resultSizeEstimate;
  }
  /**
   * Estimated total number of results.
   * @param resultSizeEstimate resultSizeEstimate or {@code null} for none
   */
  public ListDraftsResponse setResultSizeEstimate(Nullable!long _resultSizeEstimate) {
    this._resultSizeEstimate = _resultSizeEstimate;
    return this;
  }

}