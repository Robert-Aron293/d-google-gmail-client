/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */
module Google.Apis.Gmail.v1.Data.FilterAction;

import vibe.data.json: optional;
import std.typecons: Nullable;
import std.datetime : SysTime;
import std.conv: to;

import Google.Apis.Gmail.v1.GmailMyNullable;

/**
 * A set of actions to perform on a message.
 *
 * This is the D data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Gmail API. For a detailed explanation see:
 *
 *
 * @author Robert Aron.
 */
public struct FilterAction {

  /**
   * List of labels to add to the message.
   * The value may be {@code null}.
   */
  @optional public string[] _addLabelIds;

  /**
   * Email address that the message should be forwarded to.
   * The value may be {@code null}.
   */
  @optional public string _forward;

  /**
   * List of labels to remove from the message.
   * The value may be {@code null}.
   */
  @optional public string[] _removeLabelIds;

  /**
   * List of labels to add to the message.
   * @return value or {@code null} for none
   */
  public string[] getAddLabelIds() {
    return _addLabelIds;
  }
  /**
   * List of labels to add to the message.
   * @param addLabelIds addLabelIds or {@code null} for none
   */
  public FilterAction setAddLabelIds(string[] _addLabelIds) {
    this._addLabelIds = _addLabelIds;
    return this;
  }

  /**
   * Email address that the message should be forwarded to.
   * @return value or {@code null} for none
   */
  public string getForward() {
    return _forward;
  }
  /**
   * Email address that the message should be forwarded to.
   * @param forward forward or {@code null} for none
   */
  public FilterAction setForward(string _forward) {
    this._forward = _forward;
    return this;
  }

  /**
   * List of labels to remove from the message.
   * @return value or {@code null} for none
   */
  public string[] getRemoveLabelIds() {
    return _removeLabelIds;
  }
  /**
   * List of labels to remove from the message.
   * @param removeLabelIds removeLabelIds or {@code null} for none
   */
  public FilterAction setRemoveLabelIds(string[] _removeLabelIds) {
    this._removeLabelIds = _removeLabelIds;
    return this;
  }

}