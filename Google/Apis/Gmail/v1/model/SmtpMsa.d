/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */
module Google.Apis.Gmail.v1.Data.SmtpMsa;

import vibe.data.json: optional;
import std.typecons: Nullable;
import std.datetime : SysTime;
import std.conv: to;

import Google.Apis.Gmail.v1.GmailMyNullable;

/**
 * Configuration for communication with an SMTP service.
 *
 * This is the D data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Gmail API. For a detailed explanation see:
 *
 *
 * @author Robert Aron.
 */
public struct SmtpMsa {

  /**
   * The hostname of the SMTP service. Required.
   * The value may be {@code null}.
   */
  @optional public string _host;

  /**
   * The password that will be used for authentication with the SMTP service. This is a write-only
   * field that can be specified in requests to create or update SendAs settings; it is never
   * populated in responses.
   * The value may be {@code null}.
   */
  @optional public string _password;

  /**
   * The port of the SMTP service. Required.
   * The value may be {@code null}.
   */
  @optional public Nullable!int _port;

  /**
   * The protocol that will be used to secure communication with the SMTP service. Required.
   * The value may be {@code null}.
   */
  @optional public string _securityMode;

  /**
   * The username that will be used for authentication with the SMTP service. This is a write-only
   * field that can be specified in requests to create or update SendAs settings; it is never
   * populated in responses.
   * The value may be {@code null}.
   */
  @optional public string _username;

  /**
   * The hostname of the SMTP service. Required.
   * @return value or {@code null} for none
   */
  public string getHost() {
    return _host;
  }
  /**
   * The hostname of the SMTP service. Required.
   * @param host host or {@code null} for none
   */
  public SmtpMsa setHost(string _host) {
    this._host = _host;
    return this;
  }

  /**
   * The password that will be used for authentication with the SMTP service. This is a write-only
   * field that can be specified in requests to create or update SendAs settings; it is never
   * populated in responses.
   * @return value or {@code null} for none
   */
  public string getPassword() {
    return _password;
  }
  /**
   * The password that will be used for authentication with the SMTP service. This is a write-only
   * field that can be specified in requests to create or update SendAs settings; it is never
   * populated in responses.
   * @param password password or {@code null} for none
   */
  public SmtpMsa setPassword(string _password) {
    this._password = _password;
    return this;
  }

  /**
   * The port of the SMTP service. Required.
   * @return value or {@code null} for none
   */
  public Nullable!int getPort() {
    return _port;
  }
  /**
   * The port of the SMTP service. Required.
   * @param port port or {@code null} for none
   */
  public SmtpMsa setPort(Nullable!int _port) {
    this._port = _port;
    return this;
  }

  /**
   * The protocol that will be used to secure communication with the SMTP service. Required.
   * @return value or {@code null} for none
   */
  public string getSecurityMode() {
    return _securityMode;
  }
  /**
   * The protocol that will be used to secure communication with the SMTP service. Required.
   * @param securityMode securityMode or {@code null} for none
   */
  public SmtpMsa setSecurityMode(string _securityMode) {
    this._securityMode = _securityMode;
    return this;
  }

  /**
   * The username that will be used for authentication with the SMTP service. This is a write-only
   * field that can be specified in requests to create or update SendAs settings; it is never
   * populated in responses.
   * @return value or {@code null} for none
   */
  public string getUsername() {
    return _username;
  }
  /**
   * The username that will be used for authentication with the SMTP service. This is a write-only
   * field that can be specified in requests to create or update SendAs settings; it is never
   * populated in responses.
   * @param username username or {@code null} for none
   */
  public SmtpMsa setUsername(string _username) {
    this._username = _username;
    return this;
  }

}